{
 "cells": [
  {
   "cell_type": "code",
   "execution_count": 4,
   "metadata": {},
   "outputs": [],
   "source": [
    "import os"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 5,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "['CNV', 'VCF']"
      ]
     },
     "execution_count": 5,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "os.listdir('C:/Users/yjlu/Desktop/python101_demo_data/python101_demo_data/data_with_subdir')"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 6,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "<generator object walk at 0x000002B6CD138408>"
      ]
     },
     "execution_count": 6,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "os.walk('C:/Users/yjlu/Desktop/python101_demo_data/python101_demo_data/data_with_subdir')"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 7,
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "['CNV', 'VCF']\n",
      "[]\n",
      "['Proton_A_816_20181115', 'Proton_A_858_20181228', 'Proton_A_884_20190315']\n",
      "[]\n",
      "[]\n",
      "['Proton_A_816_20181115_IonXpress_007.amplicon.cov.xls', 'Proton_A_816_20181115_IonXpress_007.base.cov.xls', 'Proton_A_816_20181115_IonXpress_007.stats.cov.txt', 'Proton_A_816_20181115_IonXpress_009.amplicon.cov.xls', 'Proton_A_816_20181115_IonXpress_009.base.cov.xls', 'Proton_A_816_20181115_IonXpress_009.stats.cov.txt', 'Proton_A_816_20181115_IonXpress_010.amplicon.cov.xls', 'Proton_A_816_20181115_IonXpress_010.base.cov.xls', 'Proton_A_816_20181115_IonXpress_010.stats.cov.txt', 'Proton_A_816_20181115_IonXpress_011.amplicon.cov.xls', 'Proton_A_816_20181115_IonXpress_011.base.cov.xls', 'Proton_A_816_20181115_IonXpress_011.stats.cov.txt', 'Proton_A_816_20181115_IonXpress_012.amplicon.cov.xls', 'Proton_A_816_20181115_IonXpress_012.base.cov.xls', 'Proton_A_816_20181115_IonXpress_012.stats.cov.txt', 'Proton_A_816_20181115_IonXpress_013.amplicon.cov.xls', 'Proton_A_816_20181115_IonXpress_013.base.cov.xls', 'Proton_A_816_20181115_IonXpress_013.stats.cov.txt', 'Proton_A_816_20181115_IonXpress_014.amplicon.cov.xls', 'Proton_A_816_20181115_IonXpress_014.base.cov.xls', 'Proton_A_816_20181115_IonXpress_014.stats.cov.txt', 'Proton_A_816_20181115_IonXpress_036.amplicon.cov.xls', 'Proton_A_816_20181115_IonXpress_036.base.cov.xls', 'Proton_A_816_20181115_IonXpress_036.stats.cov.txt', 'Proton_A_816_20181115_IonXpress_037.amplicon.cov.xls', 'Proton_A_816_20181115_IonXpress_037.base.cov.xls', 'Proton_A_816_20181115_IonXpress_037.stats.cov.txt']\n",
      "[]\n",
      "['Proton_A_858_20181228_IonXpress_080.amplicon.cov.xls', 'Proton_A_858_20181228_IonXpress_080.base.cov.xls', 'Proton_A_858_20181228_IonXpress_080.stats.cov.txt', 'Proton_A_858_20181228_IonXpress_081.amplicon.cov.xls', 'Proton_A_858_20181228_IonXpress_081.base.cov.xls', 'Proton_A_858_20181228_IonXpress_081.stats.cov.txt', 'Proton_A_858_20181228_IonXpress_082.amplicon.cov.xls', 'Proton_A_858_20181228_IonXpress_082.base.cov.xls', 'Proton_A_858_20181228_IonXpress_082.stats.cov.txt', 'Proton_A_858_20181228_IonXpress_083.amplicon.cov.xls', 'Proton_A_858_20181228_IonXpress_083.base.cov.xls', 'Proton_A_858_20181228_IonXpress_083.stats.cov.txt']\n",
      "[]\n",
      "['Proton_A_884_20190315_IonXpress_074.amplicon.cov.xls', 'Proton_A_884_20190315_IonXpress_074.base.cov.xls', 'Proton_A_884_20190315_IonXpress_074.stats.cov.txt', 'Proton_A_884_20190315_IonXpress_075.amplicon.cov.xls', 'Proton_A_884_20190315_IonXpress_075.base.cov.xls', 'Proton_A_884_20190315_IonXpress_075.stats.cov.txt', 'Proton_A_884_20190315_IonXpress_076.amplicon.cov.xls', 'Proton_A_884_20190315_IonXpress_076.base.cov.xls', 'Proton_A_884_20190315_IonXpress_076.stats.cov.txt']\n",
      "['Proton_A_870_20190131', 'Proton_A_879_20190307', 'Proton_A_894_20190403']\n",
      "[]\n",
      "[]\n",
      "['Proton_A_870_20190131_IonXpress_007_TSVC_variants.vcf', 'Proton_A_870_20190131_IonXpress_028_TSVC_variants.vcf', 'Proton_A_870_20190131_IonXpress_029_TSVC_variants.vcf', 'Proton_A_870_20190131_IonXpress_032_TSVC_variants.vcf', 'Proton_A_870_20190131_IonXpress_033_TSVC_variants.vcf', 'Proton_A_870_20190131_IonXpress_034_TSVC_variants.vcf', 'Proton_A_870_20190131_IonXpress_035_TSVC_variants.vcf', 'Proton_A_870_20190131_IonXpress_036_TSVC_variants.vcf', 'Proton_A_870_20190131_IonXpress_037_TSVC_variants.vcf', 'Proton_A_870_20190131_IonXpress_038_TSVC_variants.vcf', 'Proton_A_870_20190131_IonXpress_040_TSVC_variants.vcf']\n",
      "[]\n",
      "['Proton_A_879_20190307_IonXpress_003_TSVC_variants.vcf', 'Proton_A_879_20190307_IonXpress_004_TSVC_variants.vcf', 'Proton_A_879_20190307_IonXpress_005_TSVC_variants.vcf', 'Proton_A_879_20190307_IonXpress_008_TSVC_variants.vcf', 'Proton_A_879_20190307_IonXpress_009_TSVC_variants.vcf', 'Proton_A_879_20190307_IonXpress_010_TSVC_variants.vcf', 'Proton_A_879_20190307_IonXpress_081_TSVC_variants.vcf', 'Proton_A_879_20190307_IonXpress_093_TSVC_variants.vcf', 'Proton_A_879_20190307_IonXpress_096_TSVC_variants.vcf']\n",
      "[]\n",
      "['Proton_A_894_20190403_IonXpress_041_TSVC_variants.vcf', 'Proton_A_894_20190403_IonXpress_042_TSVC_variants.vcf', 'Proton_A_894_20190403_IonXpress_064_TSVC_variants.vcf', 'Proton_A_894_20190403_IonXpress_081_TSVC_variants.vcf', 'Proton_A_894_20190403_IonXpress_082_TSVC_variants.vcf', 'Proton_A_894_20190403_IonXpress_083_TSVC_variants.vcf', 'Proton_A_894_20190403_IonXpress_084_TSVC_variants.vcf', 'Proton_A_894_20190403_IonXpress_085_TSVC_variants.vcf', 'Proton_A_894_20190403_IonXpress_086_TSVC_variants.vcf', 'Proton_A_894_20190403_IonXpress_087_TSVC_variants.vcf', 'Proton_A_894_20190403_IonXpress_088_TSVC_variants.vcf']\n"
     ]
    }
   ],
   "source": [
    "for root, subdirs, files in os.walk('C:/Users/yjlu/Desktop/python101_demo_data/python101_demo_data/data_with_subdir'):\n",
    "    print (subdirs)\n",
    "    \n",
    "    print (files)\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 8,
   "metadata": {},
   "outputs": [],
   "source": [
    "a, b, c = 1, 2, 3"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 9,
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "49 Proton_A_894_20190403_IonXpress_041_TSVC_variants.vcf\n",
      "49 Proton_A_894_20190403_IonXpress_042_TSVC_variants.vcf\n",
      "49 Proton_A_894_20190403_IonXpress_064_TSVC_variants.vcf\n",
      "49 Proton_A_894_20190403_IonXpress_081_TSVC_variants.vcf\n",
      "49 Proton_A_894_20190403_IonXpress_082_TSVC_variants.vcf\n",
      "49 Proton_A_894_20190403_IonXpress_083_TSVC_variants.vcf\n",
      "49 Proton_A_894_20190403_IonXpress_084_TSVC_variants.vcf\n",
      "49 Proton_A_894_20190403_IonXpress_085_TSVC_variants.vcf\n",
      "49 Proton_A_894_20190403_IonXpress_086_TSVC_variants.vcf\n",
      "49 Proton_A_894_20190403_IonXpress_087_TSVC_variants.vcf\n",
      "49 Proton_A_894_20190403_IonXpress_088_TSVC_variants.vcf\n",
      "[]\n",
      "[]\n",
      "['Proton_A_894_20190403_IonXpress_041_TSVC_variants.vcf', 'Proton_A_894_20190403_IonXpress_042_TSVC_variants.vcf', 'Proton_A_894_20190403_IonXpress_064_TSVC_variants.vcf', 'Proton_A_894_20190403_IonXpress_081_TSVC_variants.vcf', 'Proton_A_894_20190403_IonXpress_082_TSVC_variants.vcf', 'Proton_A_894_20190403_IonXpress_083_TSVC_variants.vcf', 'Proton_A_894_20190403_IonXpress_084_TSVC_variants.vcf', 'Proton_A_894_20190403_IonXpress_085_TSVC_variants.vcf', 'Proton_A_894_20190403_IonXpress_086_TSVC_variants.vcf', 'Proton_A_894_20190403_IonXpress_087_TSVC_variants.vcf', 'Proton_A_894_20190403_IonXpress_088_TSVC_variants.vcf']\n"
     ]
    }
   ],
   "source": [
    "xls =[]\n",
    "vcf =[]\n",
    "txt =[]\n",
    "for _ in files :\n",
    "    if _.endswith ('xls'):\n",
    "        print (len(_)- 4 ,_ )\n",
    "        xls.append(_)\n",
    "    elif _.endswith('.txt'):\n",
    "        print (len(_)- 4 ,_ )\n",
    "        txt.append(_)\n",
    "    elif _.endswith('.vcf'):\n",
    "        print (len(_)- 4 ,_ )\n",
    "        vcf.append(_)\n",
    "    else :\n",
    "        print('')\n",
    "print (xls)\n",
    "print (txt)\n",
    "print (vcf)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 10,
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Proton_A_816_20181115_IonXpress_007.stats.cov.txt\n",
      "Proton_A_816_20181115_IonXpress_009.stats.cov.txt\n",
      "Proton_A_816_20181115_IonXpress_010.stats.cov.txt\n",
      "Proton_A_816_20181115_IonXpress_011.stats.cov.txt\n",
      "Proton_A_816_20181115_IonXpress_012.stats.cov.txt\n",
      "Proton_A_816_20181115_IonXpress_013.stats.cov.txt\n",
      "Proton_A_816_20181115_IonXpress_014.stats.cov.txt\n",
      "Proton_A_816_20181115_IonXpress_036.stats.cov.txt\n",
      "Proton_A_816_20181115_IonXpress_037.stats.cov.txt\n",
      "Proton_A_858_20181228_IonXpress_080.stats.cov.txt\n",
      "Proton_A_858_20181228_IonXpress_081.stats.cov.txt\n",
      "Proton_A_858_20181228_IonXpress_082.stats.cov.txt\n",
      "Proton_A_858_20181228_IonXpress_083.stats.cov.txt\n",
      "Proton_A_884_20190315_IonXpress_074.stats.cov.txt\n",
      "Proton_A_884_20190315_IonXpress_075.stats.cov.txt\n",
      "Proton_A_884_20190315_IonXpress_076.stats.cov.txt\n"
     ]
    }
   ],
   "source": [
    "for root, subdirs, files in os.walk('C:/Users/yjlu/Desktop/python101_demo_data/python101_demo_data/data_with_subdir') :\n",
    "    for _ in files :\n",
    "        if _.endswith('txt') :\n",
    "            print (_)\n",
    "                                    "
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 13,
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "48 Proton_A_816_20181115_IonXpress_007.amplicon.cov.xls\n",
      "44 Proton_A_816_20181115_IonXpress_007.base.cov.xls\n",
      "45 Proton_A_816_20181115_IonXpress_007.stats.cov.txt\n",
      "48 Proton_A_816_20181115_IonXpress_009.amplicon.cov.xls\n",
      "44 Proton_A_816_20181115_IonXpress_009.base.cov.xls\n",
      "45 Proton_A_816_20181115_IonXpress_009.stats.cov.txt\n",
      "48 Proton_A_816_20181115_IonXpress_010.amplicon.cov.xls\n",
      "44 Proton_A_816_20181115_IonXpress_010.base.cov.xls\n",
      "45 Proton_A_816_20181115_IonXpress_010.stats.cov.txt\n",
      "48 Proton_A_816_20181115_IonXpress_011.amplicon.cov.xls\n",
      "44 Proton_A_816_20181115_IonXpress_011.base.cov.xls\n",
      "45 Proton_A_816_20181115_IonXpress_011.stats.cov.txt\n",
      "48 Proton_A_816_20181115_IonXpress_012.amplicon.cov.xls\n",
      "44 Proton_A_816_20181115_IonXpress_012.base.cov.xls\n",
      "45 Proton_A_816_20181115_IonXpress_012.stats.cov.txt\n",
      "48 Proton_A_816_20181115_IonXpress_013.amplicon.cov.xls\n",
      "44 Proton_A_816_20181115_IonXpress_013.base.cov.xls\n",
      "45 Proton_A_816_20181115_IonXpress_013.stats.cov.txt\n",
      "48 Proton_A_816_20181115_IonXpress_014.amplicon.cov.xls\n",
      "44 Proton_A_816_20181115_IonXpress_014.base.cov.xls\n",
      "45 Proton_A_816_20181115_IonXpress_014.stats.cov.txt\n",
      "48 Proton_A_816_20181115_IonXpress_036.amplicon.cov.xls\n",
      "44 Proton_A_816_20181115_IonXpress_036.base.cov.xls\n",
      "45 Proton_A_816_20181115_IonXpress_036.stats.cov.txt\n",
      "48 Proton_A_816_20181115_IonXpress_037.amplicon.cov.xls\n",
      "44 Proton_A_816_20181115_IonXpress_037.base.cov.xls\n",
      "45 Proton_A_816_20181115_IonXpress_037.stats.cov.txt\n",
      "48 Proton_A_858_20181228_IonXpress_080.amplicon.cov.xls\n",
      "44 Proton_A_858_20181228_IonXpress_080.base.cov.xls\n",
      "45 Proton_A_858_20181228_IonXpress_080.stats.cov.txt\n",
      "48 Proton_A_858_20181228_IonXpress_081.amplicon.cov.xls\n",
      "44 Proton_A_858_20181228_IonXpress_081.base.cov.xls\n",
      "45 Proton_A_858_20181228_IonXpress_081.stats.cov.txt\n",
      "48 Proton_A_858_20181228_IonXpress_082.amplicon.cov.xls\n",
      "44 Proton_A_858_20181228_IonXpress_082.base.cov.xls\n",
      "45 Proton_A_858_20181228_IonXpress_082.stats.cov.txt\n",
      "48 Proton_A_858_20181228_IonXpress_083.amplicon.cov.xls\n",
      "44 Proton_A_858_20181228_IonXpress_083.base.cov.xls\n",
      "45 Proton_A_858_20181228_IonXpress_083.stats.cov.txt\n",
      "48 Proton_A_884_20190315_IonXpress_074.amplicon.cov.xls\n",
      "44 Proton_A_884_20190315_IonXpress_074.base.cov.xls\n",
      "45 Proton_A_884_20190315_IonXpress_074.stats.cov.txt\n",
      "48 Proton_A_884_20190315_IonXpress_075.amplicon.cov.xls\n",
      "44 Proton_A_884_20190315_IonXpress_075.base.cov.xls\n",
      "45 Proton_A_884_20190315_IonXpress_075.stats.cov.txt\n",
      "48 Proton_A_884_20190315_IonXpress_076.amplicon.cov.xls\n",
      "44 Proton_A_884_20190315_IonXpress_076.base.cov.xls\n",
      "45 Proton_A_884_20190315_IonXpress_076.stats.cov.txt\n",
      "49 Proton_A_870_20190131_IonXpress_007_TSVC_variants.vcf\n",
      "49 Proton_A_870_20190131_IonXpress_028_TSVC_variants.vcf\n",
      "49 Proton_A_870_20190131_IonXpress_029_TSVC_variants.vcf\n",
      "49 Proton_A_870_20190131_IonXpress_032_TSVC_variants.vcf\n",
      "49 Proton_A_870_20190131_IonXpress_033_TSVC_variants.vcf\n",
      "49 Proton_A_870_20190131_IonXpress_034_TSVC_variants.vcf\n",
      "49 Proton_A_870_20190131_IonXpress_035_TSVC_variants.vcf\n",
      "49 Proton_A_870_20190131_IonXpress_036_TSVC_variants.vcf\n",
      "49 Proton_A_870_20190131_IonXpress_037_TSVC_variants.vcf\n",
      "49 Proton_A_870_20190131_IonXpress_038_TSVC_variants.vcf\n",
      "49 Proton_A_870_20190131_IonXpress_040_TSVC_variants.vcf\n",
      "49 Proton_A_879_20190307_IonXpress_003_TSVC_variants.vcf\n",
      "49 Proton_A_879_20190307_IonXpress_004_TSVC_variants.vcf\n",
      "49 Proton_A_879_20190307_IonXpress_005_TSVC_variants.vcf\n",
      "49 Proton_A_879_20190307_IonXpress_008_TSVC_variants.vcf\n",
      "49 Proton_A_879_20190307_IonXpress_009_TSVC_variants.vcf\n",
      "49 Proton_A_879_20190307_IonXpress_010_TSVC_variants.vcf\n",
      "49 Proton_A_879_20190307_IonXpress_081_TSVC_variants.vcf\n",
      "49 Proton_A_879_20190307_IonXpress_093_TSVC_variants.vcf\n",
      "49 Proton_A_879_20190307_IonXpress_096_TSVC_variants.vcf\n",
      "49 Proton_A_894_20190403_IonXpress_041_TSVC_variants.vcf\n",
      "49 Proton_A_894_20190403_IonXpress_042_TSVC_variants.vcf\n",
      "49 Proton_A_894_20190403_IonXpress_064_TSVC_variants.vcf\n",
      "49 Proton_A_894_20190403_IonXpress_081_TSVC_variants.vcf\n",
      "49 Proton_A_894_20190403_IonXpress_082_TSVC_variants.vcf\n",
      "49 Proton_A_894_20190403_IonXpress_083_TSVC_variants.vcf\n",
      "49 Proton_A_894_20190403_IonXpress_084_TSVC_variants.vcf\n",
      "49 Proton_A_894_20190403_IonXpress_085_TSVC_variants.vcf\n",
      "49 Proton_A_894_20190403_IonXpress_086_TSVC_variants.vcf\n",
      "49 Proton_A_894_20190403_IonXpress_087_TSVC_variants.vcf\n",
      "49 Proton_A_894_20190403_IonXpress_088_TSVC_variants.vcf\n"
     ]
    }
   ],
   "source": [
    "for root, subdirs, files in os.walk('C:/Users/yjlu/Desktop/python101_demo_data/python101_demo_data/data_with_subdir') :\n",
    "    for _ in files :\n",
    "        if _.endswith ('xls'):\n",
    "            print (len(_)- 4 ,_ )\n",
    "        elif _.endswith('.txt'):\n",
    "            print (len(_)- 4 ,_ )\n",
    "        elif _.endswith('.vcf'):\n",
    "            print (len(_)- 4 ,_ )\n",
    "        else :\n",
    "            print('')"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "metadata": {},
   "outputs": [],
   "source": []
  }
 ],
 "metadata": {
  "kernelspec": {
   "display_name": "Python 3",
   "language": "python",
   "name": "python3"
  },
  "language_info": {
   "codemirror_mode": {
    "name": "ipython",
    "version": 3
   },
   "file_extension": ".py",
   "mimetype": "text/x-python",
   "name": "python",
   "nbconvert_exporter": "python",
   "pygments_lexer": "ipython3",
   "version": "3.7.1"
  }
 },
 "nbformat": 4,
 "nbformat_minor": 2
}
